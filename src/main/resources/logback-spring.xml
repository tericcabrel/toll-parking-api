<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                %d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger{36}.%M - %msg%n
                <!-- DateTime Thread LogLevel PackageAndClassWithMaxLenthOf36  - MessageAngGoNewLine-->
            </pattern>
        </encoder>
    </appender>

    <appender name="SAVE-TO-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <file>${LOG_PATH}/log.log</file>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                %d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n
            </Pattern>
        </encoder>

        <!--
        Log file is created per day and the max size of a file is 10MB
        If for the same day the file size reach the max size, increments the filename (%i => index => 0, 1, 2, etc...)
        After 10 days, a log file is deleted
        Meanwhile, if the total size of log file exceed 100MB, the most old file will be deleted to free space
        -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>
                ${LOG_PATH}/archived/log_%d{dd-MM-yyyy}_%i.log
            </fileNamePattern>
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>10</maxHistory>
            <totalSizeCap>100MB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- Log in console and file for dev environment -->
    <springProfile name="dev">
        <root level="info">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="SAVE-TO-FILE"/>
        </root>
    </springProfile>

    <!-- Log in file only for prod environment-->
    <springProfile name="prod">
        <root level="info">
            <appender-ref ref="SAVE-TO-FILE"/>
        </root>
    </springProfile>
</configuration>